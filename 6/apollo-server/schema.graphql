scalar JSON

"A scalar type is a primitive types like ID, String, Boolean, or Int."
type ToDo {
    id: Int!
    message: String!
    username: String!
    lastEdited: String!
}

input Credentials {
    username: String!
    pw: String!
}
input LoginData {
    username: String!
    token: String!
}

type Query {
    "Test query with a parameter"
    hello(name: String): String!
    "List of todos in the db"
    todos(FILTER_MODE: String!, skip: Int = -1, limit: Int = -1): [ToDo]
    todosForUser(loginData: LoginData!): [ToDo]
    "One Todo query for testing"
    todo(id: Int!): ToDo
    getToDoDependencies(id: Int!): [ToDo]
}

type Mutation {
    myMutation: String!
    "Add a message and publish it on todos'"
    addTodo(id: Int!, newMessage: String!, loginData: LoginData!, lastEdited: String!): ToDo!
    "Updates a todo with the given ID"
    updateTodo(id: Int!, updateMessage: String!, loginData: LoginData!, lastEdited: String!): String!
    "Delets a todo with the given ID"
    deleteTodo(id: Int!, loginData: LoginData!): String!
    "Add dependency"
    addToDoDependency(id: Int!, dependencyId: Int!): Boolean
    authenticate(Credentials: Credentials!): String!
}

"Input from user to create a todo"
input ToDoInput {
    "Message content of a ToDo"
    message: String!
}
